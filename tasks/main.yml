---
# tasks file for tigervnc_server
- name: check requirements
  command: "{{ ansible_pkg_mgr }} grouplist installed"
  args:
    warn: no
  register: tigervnc_server_check_requirements
  changed_when: no

- name: install requirements
  command: "{{ ansible_pkg_mgr }} groupinstall {{ ansible_distribution_major_version }} --assumeyes {{ item }}"
  args:
    warn: no
  loop: "{{ tigervnc_server_requirements }}"
  when:
    - item not in tigervnc_server_check_requirements.stdout
  register: tigervnc_server_install_requirements
  until: tigervnc_server_install_requirements is succeeded
  retries: 3

- name: install software
  package:
    name: "{{ tigervnc_server_packages }}"
    state: present
  register: tigervnc_server_install_software
  until: tigervnc_server_install_software is succeeded
  retries: 3

- name: generate vnc password
  shell: set -o pipefail ; printf "n\n{{ tigervnc_server_password }}\n{{ tigervnc_server_password }}\n\n" | vncpasswd
  args:
    creates: /home/{{ tigervnc_server_username }}/.vnc/passwd
  become: yes
  become_user: "{{ tigervnc_server_username }}"

- name: place service unit
  template:
    src: vncserver.service.j2
    dest: /etc/systemd/system/vncserver-{{ tigervnc_server_username }}@.service
  notify:
    - systemctl daemon-reload

- name: start software
  service:
    name: "{{ tigervnc_server_service }}"
    state: started
    enabled: yes
