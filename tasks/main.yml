---
# tasks file for tigervnc_server
- name: check status of package
  package:
    name: coreutils-single
    state: present
  check_mode: yes
  register: tigervnc_server_check_status_of_package

- name: install requirements
  command: dnf install --allowerasing -y "{{ item }}"
  args:
    warn: no
  loop: "{{ tigervnc_server_requirements }}"
  when:
    - tigervnc_server_check_status_of_package is not changed
  register: tigervnc_server_install_requirements
  async: 900
  poll: 0
  until: tigervnc_server_install_requirements is succeeded
  retries: 3

- name: check install requirements
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ tigervnc_server_install_requirements.results }}"
  when:
    - tigervnc_server_check_status_of_package is not changed
  register: tigervnc_server_check_install_requirements
  until: tigervnc_server_check_install_requirements is finished
  retries: 180

- name: install software
  package:
    name: "{{ tigervnc_server_packages }}"
    state: present
  register: tigervnc_server_install_software
  until: tigervnc_server_install_software is succeeded
  retries: 3

- name: generate vnc password
  shell: set -o pipefail ; printf "n\n{{ tigervnc_server_password }}\n{{ tigervnc_server_password }}\n\n" | vncpasswd
  args:
    creates: /home/{{ tigervnc_server_username }}/.vnc/passwd
  become: yes
  become_user: "{{ tigervnc_server_username }}"

- name: place service unit
  template:
    src: vncserver.service.j2
    dest: /etc/systemd/system/vncserver-{{ tigervnc_server_username }}@.service
  notify:
    - systemctl daemon-reload

# - name: place xstartup
#   copy:
#     src: xstartup
#     dest: /home/{{ tigervnc_server_username }}/.vnc/xstartup
#     owner: "{{ tigervnc_server_username }}"
#     group: vncgroup
#     mode: "0755"
#   notify:
#     - restart tigervnc-server

- name: start software
  service:
    name: "{{ tigervnc_server_service }}"
    state: started
    enabled: yes
